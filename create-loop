#!/bin/bash

printf """
- - - - Easy yes/no bash command creator - - - -

"""

read -p "Enter a question: > " question
read -p "What happens if yes? > " ifyes
read -p "What happens if no? > " ifno

while true; do
    read -p "Save in this folder (y) Manual path (m), Clipboard (c) > " ymc                             #variable "ymc" takes user input
    case $ymc in                                                                                        #check value of input
        [Yy]* ) path=$PWD && path="${path}/" && break;;                                                 #get current working dir, add "/" to make it work
        [Mm]* ) read -p "Enter a path: " path && [[ "$path" == */ ]] || path="${path}/" && break;;      #if not ending with "/" add it
        [Cc]* ) cat << EOF | wl-copy && echo "Copied to clipboard." && exit;;                           #copy output to wl-clip (only works on wayland)
#!/bin/bash

while true; do
    read -p "$question (y/n) > " yn
    case $yn in
        [Yy]* ) $ifyes && break;;
        [Nn]* ) $ifno && break;;
        * ) echo "Please answer yes or no.";;
    esac
done
EOF
        * ) echo "Please answer yes or no.";;
    esac
done

while true; do
    read -p "Name your loop? Otherwise automatic. (y/n) > " yn                                          #allows manual naming of loop
    case $yn in
        [Yy]* ) read -p "Name of your loop: " loopname && break;;                                       #user inputs loopname
        [Nn]* ) loopname=loop && break;;                                                                #otherwise named "loop"
        * ) echo "Please answer yes or no.";;
    esac
done

if [[ -e $loopname || -L $loopname ]] ; then                                                            #check if "loop" file already exists
    i=2                                                                                                 #second loop should be "loop2"
    while [[ -e $loopname-$i || -L $loopname-$i ]] ; do                                                 #if loop2 already exists, go higher, repeat until loop has highest number
        let i++
    done
    loopname=$loopname-$i                                                                               #set loopname to be highest needed number appended to it
fi

cat > $path$loopname <<EOF && echo "Loop saved in $path$loopname."                                      #print the loop to the given manual or automatic path with given name
#!/bin/sh

while true; do
    read -p "$question (y/n) > " yn
    case $yn in
        [Yy]* ) $ifyes && break;;
        [Nn]* ) $ifno && break;;
        * ) echo "Please answer yes or no.";;
    esac
done
EOF


# TODO
# maybe adding an append function would be cool, but clipboard copy solves that
